/*
 	function try
	이니셜라이제이션 리스트에서 발생하는 예외를 처리하는데 자주 사용
	생성자에서 function try 사용
*/

#include <iostream>

using namespace std;

class A
{
	private:
	int m_x;
	
	public:
	A(int x) : m_x(x)
	{
		if( x <= 0)
			throw 1;
	}
};

class B : public A
{
	public:
	/*
	B(int x)
		: A(x)
	{}
	*/
	
	// re-throw를 안해도 있는거처럼 작동함
	B(int x) try : A(x)
	{
		// do initialization
	}
	catch (...)
	{
		cout << "Catch in B construtor " << endl;
		// throw;
	}
};

// 바디 전체에 붙여 쓸 수도 있음.
void doSomething()
try
{
	throw - 1;
}
catch (...)
{
	cout << "Catch in doSomething()" << endl;
}


int main()
{
	try
	{
		// doSomething();
		B b(0);
	}
	catch (...)
	{
		cout << "Catch in main()" << endl;
	}
	
	return 0;
}

