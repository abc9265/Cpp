/*
	std::shared_ptr // 소유권을 여러군데에서 공유할 수 있음.
	몇군데에서 shared되고있는지 셈
	shared된 모든 값이 destroyed되야 그때서야 사라진다.
	
*/

#include <iostream>

using namespace std;

/*
void doSomething(std::unique_ptr<Resource> res)
{

}
*/

int main()
{
	// res값은 smart pointer로 쓰지 않아도
	// shared pointer가 사용하고 있기 떄문에 다 쓴뒤에 destroyed된다.
	// Resource *res = new Resource(1000000);
	
	// 이어가면서 해야함. 이렇게 사용하지 않고 둘 다 res를 넣으면 
	// res의 소유권이 누구에게 있는지 모르게되어 에러가 생긴다.
	// std::shared_ptr<Resource> ptr1(res);
	// std::shared_ptr<Resource> ptr2(ptr1);
	
	// auto ptr = std::make_shared<Resource>(3); // 이게 더 안전하고 선호됨
	
	// doSomething(std::unique_ptr<Resource>(new Resource(10000))); // 위험함
	// doSomething(std::make_unique<Resource>(1000000)); // 이런식이 안전
	
	
	return 0;
}