/*
	sizeof, 쉼표연산자(Comma Operator), 조건부연산자(Conditional Operators)
	comma operator
	사용할 때 좀 주의가 필요함. 
	for문이 아닌 다른 때에는 풀어서 여러줄로 쓰는게 나을 수도 있다.
*/

#include <iostream>

int main()
{
	using namespace std;
	
	/*
		sizeof - 어떠한 데이터 형의 크기를 알고싶을때 사용함.
		데이터타입이나 변수를 넣어도 됨
		구조체나 스트럭쳐 클래스를 넣을 수 있음.
		
	*/
	float a;
	
	cout << sizeof(float) << endl; // sizeof는 연산자임. 함수가아님.
	cout << sizeof(a) << endl; 
	cout << sizeof a << endl; // 변수명일경우 괄호가 없어도 사용가능
	// cout << sizeof float // 이건안댐 ㅋㅋ
	
	/*
		comma operator
	*/
	int x = 3;
	int y = 10;
	
	// 콤마로 나열되있을때 앞에꺼를 계산하고 뒤에껄 계산하고 뒤에꺼가 z에 들어갈 수 있게 해줌
	// 밑의 연산은
	// ++x;
	// ++y;
	// int z = y와 같음
	int z = (++x, ++y);  
	
	cout << "x: " << x << " y: " << y << " z: " << z << endl;
	
	// 여기에있는 콤마는 구분해주는 기호임. sum(1, 2)이런거와 같음
	// comma operator가 아님 구분기호임 
	int q = 1, w = 10;
	int k;
	
	// 이때는 operator의 우선순위가 =보다 낮아서 대입을 먼저해버림
	// (z=a), b;와 같음
	k = q, w; 
	
	cout << "k: " << k << endl;
	
	/*
		conditional operator (arithmetric if)
		조건이 복잡한경우에는 if문으로 쪼개서 쓰자.
	*/
	bool onSale = true;
	
	int price; // 앞에 const를 붙이고싶으면 어쩔까? 3항연산자가 유용하다.
	
	if(onSale)
		price = 10;
	else
		price = 100;
	
	cout << "price: " << price << endl;
	
	const int price2 = (onSale == true)? 10 : 100;
	
	cout << "price2: " << price2 << endl;
	
	// if문을 굳이 써야겠다 - 함수를 쪼개야함 get, set을 이용해서 쪼개야함 불-편

	
	int p = 5;
	
	// 괄호로 싸야하는 이유 - 연산자 우선순위때문
	// 충돌이 일어날 수 있기 떄문임.
	// 리턴값들이 같은 타입이 아닐때는 권장하지않음.
	cout << ((x % 2 == 0) ? "even" : "odd") << endl;
	
	return 0;
}