/*
	std::cin 더 잘쓰기
	의도하지 않은 경우 어떻게 대응을 해야할지에 대해서.
	버퍼를 비울때에는 std::cin.ignore(32767, '\n');을 쓰면된다.
	기호를 넣을경우에 일반적인 수가 나오는 경우
	잘못된 숫자가 들어오는 경우 (ex. 인티저의 숫자가 너무 긴 경우)
	std:cin.fail()을 사용하면 된다. 실패하면 true를 리턴함
*/


#include <iostream>

using namespace std;

int getInt()
{
	while(true)
	{
		cout << "Enter an integer number : ";
		int x;
		cin >> x;
		if(std::cin.fail())
		{
			std::cin.clear();
			std::cin.ignore(32767, '\n');
			cout << "Invalid number, please try again" << endl;
		}
		else
		{
			std::cin.ignore(32767, '\n');
			return x;
		}
	}
}

char getOperator()
{	
	while(true)
	{
		cout << "Enter an operator (+, -) : ";
		char op;
		cin >> op;
		std::cin.ignore(32767, '\n');

		if(op == '+' || op == '-')
			return op;
		else
			cout << "Invalid operator, please try again" << endl;
	}
}

void printResult(int x, char op, int y)
{
	if (op == '+') cout << x + y << endl;
	else if (op == '-') cout << x - y << endl;
	else cout << "invalid operator";
}



int main()
{
	int x = getInt();
	char op = getOperator();
	int y = getInt();
	
	printResult(x, op, y);
	
	return 0;
}