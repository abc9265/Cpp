/*
	이중포인터와 동적 다차원 배열
*/


#include <iostream>

int main()
{
	using namespace std;
	
	int *ptr = nullptr;
	int **ptrptr = nullptr; // 포인터에대한 포인터. 원래변수는 int다
	
	int value = 5;
	
	ptr = &value;
	ptrptr = &ptr;
	
	cout << ptr << " " << *ptr << " " << &ptr << endl;
	cout << ptrptr << " " << *ptrptr << " " << &ptrptr << endl;
	cout << *(*ptrptr) << endl;
	
	int ***ppptr;
	int ****pppptr; 
	
	
	const int row = 3;
	const int col = 5;
	
	// 1차원 어레이가 세개있음. 
	// 포인터로 어레이 구현
	const int s2da[row][col] =
	{
		{1, 2, 3, 4, 5},
		{6, 7, 8, 9, 10},
		{11, 12, 13, 14, 15}
	};
	
	// r이 몇개나 나올지 모르므로 int의 포인터의 어레이를 만드는것임
	// int의 어레이를 만들때 int에 별붙여서 포인터를 만들었으니
	// int의 포인터의 어레이를 만들면 *을 하나 더붙임
	int **matrix = new int*[row];
	
	for(int r = 0; r < row; ++r)
		matrix[r] = new int[col];
	
	for(int r = 0; r < row; ++r)
	{
		for(int c = 0; c < col; ++c)
			cout << matrix[r][c] << " ";
		cout << endl;
	}
	
	
	return 0;
}