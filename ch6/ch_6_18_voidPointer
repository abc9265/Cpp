/*
	void pointer
	자료형과 상관없이 포인터를 지정할 수 있지 않을까?
	Generic pointer라고도 불림 // 포괄적인
*/


#include <iostream>

int main()
{
	using namespace std;
	
	int i = 5;
	float f = 3.0;
	char c = 'a';
	
	void *ptr = nullptr;
	
	ptr = &i;
	ptr = &f;
	//ptr = &c;
	
	cout << &f << " " << ptr << endl; // 주소는 잘 들어간다.
	// cout << *ptr << endl; // 디레퍼런싱도 안됨
	
	// 가져올때는 캐스팅해줘야한다.
	cout << *static_cast<float*>(ptr) << endl;
	
	// 보이드포인터는 포인터연산을 사용할 수 없다. 
	// 더하기를할때 몇바이트를 더해야하는지 알 수 없기 때문
	// 다행이도 최신 문법에서는 이런거를 굳이 할 필요가 없게됨
	int *ptr_i = &i;
	
	cout << ptr_i << endl;
	cout << ptr_i +1 << endl;
	
	
	return 0;
}