/*
 	std::initializer_list
	생성자나 대입연산자를 만들 때 편하게 만들 수 있음
	대괄호 오퍼레이터를 제공하지 않음.
*/

#include <iostream>
#include <cassert>
#include <initializer_list>

class IntArray
{
	private:
	unsigned m_length = 0;
	int *m_data = nullptr;
	
	public:
	// 중복되는 기능은 가급적 쪼개서 한곳에서만 구현이 되도록 만드는게 좋다
	IntArray(unsigned length)
		: m_length(length)
		{
			m_data = new int[length];
		}
	
	IntArray(const std::initializer_list<int> &list)
		: IntArray(list.size())
		{
			int count = 0;
			for (auto &element : list)
			{
				m_data[count] = element;
				++count;
			}
		}
	
	~IntArray()
	{
		delete[] this->m_data;
	}
	
};

using namespace std;

int main()
{
	int my_arr[5] = {1, 2, 3, 4, 5};
	int *my_arr2 = new int[5]{ 1, 2, 3, 4, 5 };
	
	auto li = {10, 20, 30};
	
	IntArray int_array{ 1, 2, 3, 4, 5 }; // 이걸 가능하게 해줌
	// cout << int_array << endl;
		
	return 0;
}