/*
	literal constants
*/

#include <iostream>

int main()
{
	using namespace std;
	
	/*
	   글자를 적어서 표현하는 변수 : leteral
	   const float pi - constant라는 뜻 값을 더이상 바꿀 수 없음.
	   long type = l, integer type = U, | lL, uL, LU, LL ( L = long )
	   근데 위에처럼 캐스팅하면 눈에 잘 안들어오니까 명확하게 캐스팅하는게 좋음
	   ex) (long)3, (float)6.24
	*/ 
	float pi = 3.14l;
	int i = -123424u; // u가 뒤에 붙으면 unsigned라는 뜻 즉 -123424가 unsigned가됨
	unsigned int n = 5u;
	long n2 = 5L;
	double d = 6.0e-10;
	
	/*
		실용적인 측면에서 더 중요한것 - 8진수
		Decimal: 0 1 2 3 4 5 6 7 8 9 10 ... 
		Octal : 0 1 2 3 4 5 6 7 10 11 12 13 ...
		Hexa : 0 1 2 3 4 5 6 7 8 9 A B C D E F 10 ... 
		0011 1010 1111 1111 (2진수)
		3A7F (16진수) 
		읽기 가장 편한것 - 16진수 그래서 자주 씀
	*/
	
	int x = 012; // 앞에 0을붙이면 8진수라는 뜻 
	cout << "This is octal number: " << x << endl; // cout은 기본적으로 10진수임
	
	int y = 0xF; // 앞에 0x를 붙이면 16진수라는 뜻s
	cout << "This is Hexa number: " << y << endl;
	
	int z = 0b10101111; // 앞에 0b를 붙이면 2진수라는 뜻 중간의 '는 컴파일러가 무시함
	cout << "This is binary number: " << z << endl;
	
	/*
		leteral numbers
	*/
	
	const int price_per_item = 10;
	int num_items = 123;
	// 10이 무엇인지 주석을 달아두는 방법도 있지만 
	// 심볼릭상수를 이용하는법도 있다.
	// 매직넘버(그냥 숫자)를 사용하는건 좋지 못하다.
	int price = num_items * price_per_item; 
	cout << price << endl;
	
	return 0;
}
